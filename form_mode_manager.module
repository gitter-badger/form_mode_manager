<?php

/**
 * @file
 * Contains form_mode_manager.module.
 */

use Drupal\Core\Render\Element;

/**
 * Implements hook_entity_type_alter().
 */
function form_mode_manager_entity_type_alter(array &$entity_types) {
  /** @var \Drupal\Core\Entity\EntityDisplayRepository[] $display_modes_list */
  $form_modes = \Drupal::service('entity_display.repository')->getAllFormModes();
  foreach ($form_modes as $entity_type => $display_modes) {
    /* @var \Drupal\Core\Entity\EntityTypeInterface $entity */
    $entity = $entity_types[$entity_type];
    foreach ($display_modes as $machine_name => $form_display) {
      if (!isset($form_display['_core'])) {
        // Get the correct canonical path to add operation.
        $path = $entity->getLinkTemplate('canonical') . "/$machine_name";
        // @TODO Purpose possibility to handle that to define a custom entity FormClass.
        $default_handler_class = $entity->getHandlerClasses()['form']['default'];
        $entity->setFormClass($machine_name, $default_handler_class)
          ->setLinkTemplate($machine_name, $path);
      }
    }
  }
}

/**
 * Implements hook_entity_operation().
 */
function form_mode_manager_entity_operation(\Drupal\Core\Entity\EntityInterface $entity) {
  $operations = [];
  $form_modes = \Drupal::service('entity_display.repository')->getAllFormModes();
  foreach ($form_modes as $entity_type => $display_modes) {
    foreach ($display_modes as $machine_name => $form_display) {
      if (!isset($form_display['_core'])) {
        if ($entity->getEntityTypeId() === $entity_type) {
          $operations += [
            $machine_name => [
              'title' => t('Edit as @label', ['@label' => $form_display['label']])->render(),
              'url' => $entity->toUrl($machine_name),
              'weight' => 0,
            ],
          ];
        }
      }
    }
  }
  return $operations;
}
